<?xml version="1.0" encoding="UTF-8"?>
<project name="archivo" default="all">
    <property name="title" value="Archivo"/>
    <property name="version" value="0.1 Technology Preview"/>

    <property file="build.properties"/>
    <!-- Uncomment the following property if no tests compilation is needed -->
    <property name="skip.tests" value="true"/>

    <!-- Compiler options -->

    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value=""/>
    <property name="compiler.max.memory" value="700m"/>
    <patternset id="ignored.files">
        <exclude name="**/*.hprof/**"/>
        <exclude name="**/*.pyc/**"/>
        <exclude name="**/*.pyo/**"/>
        <exclude name="**/*.rbc/**"/>
        <exclude name="**/*~/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.bundle/**"/>
        <exclude name="**/.git/**"/>
        <exclude name="**/.hg/**"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/.tox/**"/>
        <exclude name="**/CVS/**"/>
        <exclude name="**/RCS/**"/>
        <exclude name="**/SCCS/**"/>
        <exclude name="**/__pycache__/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/rcs/**"/>
        <exclude name="**/vssver.scc/**"/>
        <exclude name="**/vssver2.scc/**"/>
    </patternset>
    <patternset id="library.patterns">
        <include name="*.war"/>
        <include name="*.ear"/>
        <include name="*.apk"/>
        <include name="*.zip"/>
        <include name="*.swc"/>
        <include name="*.ane"/>
        <include name="*.egg"/>
        <include name="*.jar"/>
    </patternset>
    <patternset id="compiler.resources">
        <exclude name="**/?*.java"/>
        <exclude name="**/?*.form"/>
        <exclude name="**/?*.class"/>
        <exclude name="**/?*.groovy"/>
        <exclude name="**/?*.scala"/>
        <exclude name="**/?*.flex"/>
        <exclude name="**/?*.kt"/>
        <exclude name="**/?*.clj"/>
    </patternset>


    <!-- Project Libraries -->

    <path id="library.hola.classpath">
        <pathelement location="${basedir}/lib/hola-0.1.1.jar"/>
    </path>

    <path id="library.httpclient.classpath">
        <pathelement location="${basedir}/lib/commons-codec-1.9.jar"/>
        <pathelement location="${basedir}/lib/commons-logging-1.2.jar"/>
        <pathelement location="${basedir}/lib/httpclient-4.5.jar"/>
        <pathelement location="${basedir}/lib/httpcore-4.4.3.jar"/>
    </path>

    <path id="library.json.classpath">
        <pathelement location="${basedir}/lib/json-snapshot-20150723.jar"/>
    </path>

    <path id="library.logback.classpath">
        <pathelement location="${basedir}/lib/logback-classic-1.1.3.jar"/>
        <pathelement location="${basedir}/lib/logback-core-1.1.3.jar"/>
    </path>

    <path id="library.slf4j-api.classpath">
        <pathelement location="${basedir}/lib/slf4j-api-1.7.12.jar"/>
    </path>

    <path id="library.tivo-libre.classpath">
        <pathelement location="${basedir}/lib/tivo-libre-0.7.0.jar"/>
    </path>

    <!-- Modules -->

    <!-- Module Archivo -->

    <dirname property="module.archivo.basedir" file="${ant.file}"/>

    <property name="compiler.args.archivo" value="-encoding UTF-8 -source 8 ${compiler.args}"/>

    <property name="archivo.output.dir" value="${module.archivo.basedir}/out/production/Archivo"/>
    <property name="archivo.testoutput.dir" value="${module.archivo.basedir}/out/test/Archivo"/>
    <property name="artifact.output.archivo" value="${basedir}/out/artifacts/Archivo"/>

    <path id="archivo.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="archivo.module.production.classpath">
        <path refid="library.json.classpath"/>
        <path refid="library.httpclient.classpath"/>
        <path refid="library.tivo-libre.classpath"/>
        <path refid="library.slf4j-api.classpath"/>
        <path refid="library.logback.classpath"/>
        <path refid="library.hola.classpath"/>
    </path>

    <path id="archivo.runtime.production.module.classpath">
        <pathelement location="${archivo.output.dir}"/>
        <path refid="library.json.classpath"/>
        <path refid="library.httpclient.classpath"/>
        <path refid="library.tivo-libre.classpath"/>
        <path refid="library.slf4j-api.classpath"/>
        <path refid="library.logback.classpath"/>
        <path refid="library.hola.classpath"/>
    </path>

    <path id="archivo.module.classpath">
        <pathelement location="${archivo.output.dir}"/>
        <path refid="library.json.classpath"/>
        <path refid="library.httpclient.classpath"/>
        <path refid="library.tivo-libre.classpath"/>
        <path refid="library.slf4j-api.classpath"/>
        <path refid="library.logback.classpath"/>
        <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
        <pathelement location="${idea.home}/lib/hamcrest-library-1.3.jar"/>
        <pathelement location="${idea.home}/lib/junit-4.11.jar"/>
        <path refid="library.hola.classpath"/>
    </path>

    <path id="archivo.runtime.module.classpath">
        <pathelement location="${archivo.testoutput.dir}"/>
        <pathelement location="${archivo.output.dir}"/>
        <path refid="library.json.classpath"/>
        <path refid="library.httpclient.classpath"/>
        <path refid="library.tivo-libre.classpath"/>
        <path refid="library.slf4j-api.classpath"/>
        <path refid="library.logback.classpath"/>
        <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
        <pathelement location="${idea.home}/lib/hamcrest-library-1.3.jar"/>
        <pathelement location="${idea.home}/lib/junit-4.11.jar"/>
        <path refid="library.hola.classpath"/>
    </path>


    <patternset id="excluded.from.module.archivo">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.archivo">
        <patternset refid="excluded.from.module.archivo"/>
    </patternset>

    <path id="archivo.module.sourcepath">
        <dirset dir="${module.archivo.basedir}">
            <include name="src"/>
            <include name="resources"/>
        </dirset>
    </path>

    <path id="archivo.module.test.sourcepath">
        <dirset dir="${module.archivo.basedir}">
            <include name="test"/>
        </dirset>
    </path>


    <target name="compile.module.archivo" depends="compile.module.archivo.production,compile.module.archivo.tests"
            description="Compile module Archivo"/>

    <target name="compile.module.archivo.production" description="Compile module Archivo; production classes">
        <mkdir dir="${archivo.output.dir}"/>
        <javac destdir="${archivo.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true" includeantruntime="false">
            <compilerarg line="${compiler.args.archivo}"/>
            <bootclasspath refid="archivo.module.bootclasspath"/>
            <classpath refid="archivo.module.production.classpath"/>
            <src refid="archivo.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.archivo"/>
        </javac>

        <copy todir="${archivo.output.dir}">
            <fileset dir="${module.archivo.basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
            <fileset dir="${module.archivo.basedir}/resources">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.archivo.tests" depends="compile.module.archivo.production"
            description="compile module Archivo; test classes" unless="skip.tests">
        <mkdir dir="${archivo.testoutput.dir}"/>
        <javac destdir="${archivo.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true" includeantruntime="false">
            <compilerarg line="${compiler.args.archivo}"/>
            <bootclasspath refid="archivo.module.bootclasspath"/>
            <classpath refid="archivo.module.classpath"/>
            <src refid="archivo.module.test.sourcepath"/>
            <patternset refid="excluded.from.compilation.archivo"/>
        </javac>

        <copy todir="${archivo.testoutput.dir}">
            <fileset dir="${module.archivo.basedir}/test">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="clean.module.archivo" description="cleanup module">
        <delete dir="${archivo.output.dir}"/>
        <delete dir="${archivo.testoutput.dir}"/>
    </target>

    <target name="init" description="Build initialization">
        <!-- Perform any build initialization in this target -->
    </target>

    <target name="clean" depends="clean.module.archivo, clean.artifact.archivo" description="cleanup all"/>

    <target name="build.modules" depends="init, clean, compile.module.archivo" description="build all modules"/>

    <target name="init.artifacts">
        <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
        <mkdir dir="${artifacts.temp.dir}"/>
        <property name="artifact.temp.output.Archivo" value="${artifacts.temp.dir}/Archivo.jar"/>
        <taskdef resource="com/sun/javafx/tools/ant/antlib.xml" uri="javafx:com.sun.javafx.tools.ant"
                 classpath=".:${jdk.home}/lib/ant-javafx.jar"/>
    </target>

    <target name="clean.artifact.archivo" description="clean Archivo artifact output">
        <delete dir="${artifact.output.archivo}"/>
    </target>

    <target name="artifact.archivo" depends="init.artifacts, compile.module.archivo"
            description="Build &#39;Archivo&#39; artifact" xmlns:fx="javafx:com.sun.javafx.tools.ant">
        <mkdir dir="${artifact.output.archivo}"/>
        <copy todir="${artifact.temp.output.Archivo}">
            <fileset dir="${basedir}/lib" includes="**/*.jar"/>
        </copy>
        <copy todir="${artifact.temp.output.Archivo}/resources/">
            <fileset dir="${basedir}/resources/"/>
        </copy>
        <copy todir="${artifact.temp.output.Archivo}/">
            <fileset dir="${archivo.output.dir}" includes="**/*.class"/>
            <fileset dir="${archivo.output.dir}" includes="**/*.fxml"/>
        </copy>

        <fx:fileset id="archivo_libs" dir="${artifact.temp.output.Archivo}" includes="**/*.jar">
            <exclude name="Archivo.jar"/>
        </fx:fileset>

        <fx:application id="Archivo_id" name="Archivo" mainClass="net.straylightlabs.archivo.Archivo"
                        version="0.1 Technology Preview"/>
        <fx:csstobin outdir="${artifact.temp.output.Archivo}">
            <fileset dir="${artifact.temp.output.Archivo}" includes="**/*.css"/>
        </fx:csstobin>
        <fx:jar destfile="${artifact.temp.output.Archivo}/Archivo.jar">
            <fx:application refid="Archivo_id"/>
            <fx:platform javafx="8.0"/>
            <fx:resources>
                <fx:fileset dir="${artifact.temp.output.Archivo}" includes="*.jar"/>
            </fx:resources>
            <fileset dir="${artifact.temp.output.Archivo}" excludes="**/*.jar"/>
            <manifest/>
        </fx:jar>
    </target>

    <target name="build.all.artifacts" depends="artifact.archivo" description="Build all artifacts">

        <!-- Delete temporary files -->
        <delete dir="${artifacts.temp.dir}"/>
    </target>

    <taskdef name="bundleapp" classname="com.oracle.appbundler.AppBundlerTask" classpath="lib/appbundler-1.0.jar"/>

    <target name="archivo.dmg" depends="artifact.archivo">
        <bundleapp outputdirectory="${artifact.output.archivo}"
                   name="Archivo" displayname="Archivo"
                   identifier="net.straylightlabs.archivo.Archivo"
                   shortversion="0.1"
                   icon="package/macosx/Archivo"
                   mainclassname="net.straylightlabs.archivo.Archivo">
            <classpath dir="${artifact.temp.output.Archivo}" includes="*.jar"/>
            <argument value="-tooldir"/>
            <argument value="$APP_ROOT/Contents/MacOS"/>
        </bundleapp>

        <!-- Include our platform-specific tools -->
        <copy todir="${artifact.output.archivo}/Archivo.app/Contents/MacOS/">
            <fileset dir="${basedir}/tools/"/>
        </copy>
        <chmod perm="755">
            <fileset dir="${artifact.output.archivo}/Archivo.app/Contents/MacOS/" excludes="comskip.*"/>
        </chmod>

        <!-- Delete temporary files -->
        <delete dir="${artifacts.temp.dir}"/>

        <property name="dmg.name" value="${title} ${version}"/>
        <property name="dmg.path" value="${artifact.output.archivo}/${dmg.name}.dmg"/>
        <delete file="${dmg.path}" quiet="yes" failonerror="false"/>
        <exec executable="/usr/bin/hdiutil" os="Mac OS X" failonerror="true">
            <arg value="create"/>
            <arg value="-srcfolder"/>
            <arg value="${artifact.output.archivo}/Archivo.app"/>
            <arg value="-volname"/>
            <arg value="${dmg.name}"/>
            <arg value="-ov"/>
            <arg value="${dmg.path}"/>
            <arg value="-format"/>
            <arg value="UDZO"/>
        </exec>
    </target>

    <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>
