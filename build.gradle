/*
 * Copyright 2015-2016 Todd Kulesza <todd@dropline.net>.
 *
 * This file is part of Archivo.
 *
 * Archivo is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Archivo is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Archivo.  If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'java'
apply plugin: 'javafx-gradle-plugin'
apply plugin: 'maven'

group = 'net.straylightlabs'
archivesBaseName = 'archivo'
version = '1.1.0'
def title = 'Archivo'

def signtoolBin = System.getenv("SIGNTOOL_EXE") ?: "C:\\Program Files (x86)\\Windows Kits\\8.1\\bin\\x86\\signtool.exe"
def signtoolCert = System.getenv("SIGNTOOL_CERT") ?: "C:\\Users\\todd\\OneDrive\\Documents\\Straylight Labs\\Straylight Code Signing.p12"
def signtoolCertPw = System.getenv("SIGNTOOL_CERT_PW") ?: "wrong-password"
def innoBin = System.getenv("ICSS_EXE") ?: "C:\\Program Files (x86)\\Inno Setup 5\\iscc.exe"

repositories {
    mavenCentral()
}

buildscript {
    dependencies {
        classpath group: 'de.dynamicfiles.projects.gradle.plugins', name: 'javafx-gradle-plugin', version: '8.7.0'
    }

    repositories {
        mavenCentral()
    }
}

dependencies {
    testCompile 'junit:junit:4.12'
    compile 'commons-codec:commons-codec:1.10'
    compile 'commons-logging:commons-logging:1.2'
    compile group: 'com.mixpanel', name: 'mixpanel-java', version: '1.4.4'
    compile group: 'net.straylightlabs', name: 'hola', version: '0.2.2'
    compile group: 'net.straylightlabs', name: 'tivo-libre', version: '0.7.4'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2'
    compile group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.2'
    compile group: 'org.controlsfx', name: 'controlsfx', version: '8.40.12'
    compile group: 'org.json', name: 'json', version: '20160810'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'
}

jfx {
    mainClass = 'net.straylightlabs.archivo.Archivo'
    vendor = 'Straylight Labs LLC'
    jfxMainAppJarName = "archivo.jar"
}

def innoSetupDir = new File("${buildDir}/innosetup")
def win32Resources = new File("${projectDir}/package/win32")
def universalResources = new File("${projectDir}/package/all")
def jfxResources = new File("${buildDir}/jfx/app")

task exe(dependsOn: 'installerWin32') {
}

task installerWin32(type: Exec, dependsOn: 'signWin32') {
    commandLine innoBin, "/O${buildDir}", "/dSrcDir=${buildDir}/innosetup",
            '/dMyAppName=' + title, '/dMyAppVersion=' + version,
            "${projectDir}/package/win32/installer.iss"
}

task signWin32(type: Exec, dependsOn: 'pkgWin32') {
    commandLine signtoolBin, "sign", "/f", signtoolCert, "/t", "http://timestamp.comodoca.com/authenticode",
            "/p", signtoolCertPw, "${buildDir}/innosetup/*.exe"
}

task pkgWin32(type: Copy, dependsOn: 'jfxJar') {
    delete innoSetupDir
    innoSetupDir.mkdir()

    from "${win32Resources}/tools"
    from "${win32Resources}/archivo.ico"
    from universalResources
    from jfxResources
    into innoSetupDir
}

